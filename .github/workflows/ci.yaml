name: Docker

on:
  push:
    branches:
      - master
      - 'junk/workflow'
  pull_request:
    branches:
      - master
      - 'junk/workflow'

jobs:
  # build: # Build job
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.6, 3.7, 3.8, 3.9]
  #       # python-version: [3.9]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install flake8 pytest
  #         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #     - name: Lint with flake8
  #       run: |
  #         # stop the build if there are Python syntax errors or undefined names
  #         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  #     # - name: Test with pytest
  #     #   run: |
  #     #     pytest

  # publish: # Push to Container registry
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #       #  Environment variables does not work across differnet jobs
  #       # https://github.com/actions/starter-workflows/issues/68#issuecomment-642514933
  #     - name: environment
  #       run: |
  #         echo "export DOCKER_REGISTRY_URL=ghcr.io" > ~/.bashrc
  #         echo "export REPOSITORY=jadia" >> ~/.bashrc
  #         echo "export USERNAME=jadia" >> ~/.bashrc

  #     - name: Log into registry
  #       # run: source ~/.bashrc; echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u jadia --password-stdin
  #       run: source ~/.bashrc; docker login ghcr.io -u jadia -p ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push the images
  #       env:
  #         REPO_NAME: ${{ github.event.repository.name }}
  #       run: |
  #         # Using the env var: https://github.com/actions/starter-workflows/issues/68#issuecomment-642514933
  #         source ~/.bashrc
  #         # IMAGE_NAME=${REPO_NAME} # Below method for repo name also works
  #         IMAGE_NAME=$GITHUB_REPOSITORY # Using repository name as image name

  #         tmpName="image-$RANDOM"
  #         docker build --tag $tmpName .
  #         # IMAGE_ID=$DOCKER_REGISTRY_URL/$GITHUB_REPOSITORY/$IMAGE_NAME
  #         IMAGE_ID=$DOCKER_REGISTRY_URL/$IMAGE_NAME
  #         VERSION=$(cat VERSION)

  #         echo IMAGE_ID=$IMAGE_ID
  #         echo VERSION=$VERSION

  #         docker tag $tmpName $IMAGE_ID:$VERSION
  #         docker push $IMAGE_ID:$VERSION
  #         docker tag $IMAGE_ID:$VERSION $IMAGE_ID:latest
  #         docker push $IMAGE_ID:latest

  deploy:
    runs-on: ubuntu-latest
    # needs: publish
    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }} 
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
    - name: Re-Deploy docker
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'docker stop link-extractor || true && docker rm link-extractor || true; docker pull ghcr.io/jadia/link-extractor:latest && docker run -d --restart unless-stopped --name link-extractor -p 80:80 ghcr.io/jadia/link-extractor:latest'